use Test;
use Iter::Able::Enumerate;

say "\n*****Enumerate*****";
plan 6;

my $s;
$s := [2, 2, 3, 4];
is-deeply enumerate($s), [(0, 2), (1, 2), (2, 3), (3, 4)].Seq, "Random list with default start";

$s := [2, 2, 3, 4];
is-deeply enumerate($s, start => 1), [(1, 2), (2, 2), (3, 3), (4, 4)].Seq, "Random list with start => 1";

$s := [2, 2, 3, 4];
is-deeply enumerate($s, start => -1), [(-1, 2), (0, 2), (1, 3), (2, 4)].Seq, "Random list with start => -1";

$s := [2, 2, 3, 4];
is-deeply enumerate($s, start => 0), [(0, 2), (1, 2), (2, 3), (3, 4)].Seq, "Random list with start => 0 explicitly";

$s := [];
is-deeply enumerate($s), [].Seq,  "Empty-list";

$s := "yes";
is-deeply enumerate($s), [(0, "y"), (1, "e"), (2, "s")].Seq, "String with default start";

done-testing;