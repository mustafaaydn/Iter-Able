use Test;
use Iter::Able::Map-Indexed;

say "\n*****Map-Indexed*****";
plan 6;

my $s;
$s := [3, 2, 1];
is-deeply $s.&map-indexed(* * *), (0, 2, 2).Seq, "Random list with `* * *`";

$s := (4, 7, 12, -3);
is-deeply $s.&map-indexed(* + *, start => 1), (5, 9, 15, 1).Seq, "Random list with `* + *` and nondefault `start`";

$s := (4, 7, 12, -3);
is-deeply $s.&map-indexed, ((0, 4), (1, 7), (2, 12), (3, -3)).Seq, "Random list with default mapper";

$s := [];
is-deeply map-indexed($s), [].Seq,  "Empty-list";

$s := [0, 0, 0, 0];
is-deeply map-indexed($s, * R/ *, start => 1), $s>>.Rat.Seq, "All zeros with index / item, starting at 1";

$s := "train";
is-deeply $s.&map-indexed(* Rx *, start => 1), ("t", "rr", "aaa", "iiii", "nnnnn").Seq, "String with repetition";

done-testing;